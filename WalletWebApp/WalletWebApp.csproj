<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>netcoreapp3.1</TargetFramework>
		<EnforceCodeStyleInBuild>false</EnforceCodeStyleInBuild>
		<SpaRoot>client-app\</SpaRoot>
	</PropertyGroup>

	<PropertyGroup>
		<EnableNETAnalyzers>true</EnableNETAnalyzers>
		<AnalysisMode>AllEnabledByDefault</AnalysisMode>
	</PropertyGroup>

	<ItemGroup>
		<Folder Include="client-app\" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.20" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.20" />
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.20" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.20">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="3.1.20" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\Wallet.Library\Wallet.Library.csproj" />
	</ItemGroup>

	<!--
      1. Install npm packages
      "Inputs" and "Outputs" are used for incremental builds. If all output items are up-to-date, MSBuild skips the target.
      The first time the task is executed. Then, it only runs when you change the package.json file.
      Documentation: https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?WT.mc_id=DT-MVP-5003978
   -->
	<Target Name="NpmInstall" Inputs="$(SpaRoot)package.json" Outputs="client-app/node_modules/.install-stamp">
		<!--
        Use npm install or npm ci depending on RestorePackagesWithLockFile value.
        Uncomment the following lines if you want to use this feature:

        <PropertyGroup>
          <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
        </PropertyGroup>
     -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm ci" Condition="$(RestorePackagesWithLockFile) == 'true'" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" Condition="$(RestorePackagesWithLockFile) != 'true'" />

		<!-- Write the stamp file, so incremental builds work -->
		<Touch Files="$(SpaRoot)node_modules/.install-stamp" AlwaysCreate="true" />
	</Target>

	<!--
      2. Run npm run build before building the .NET project.
      MSBuild runs NpmInstall before this task because of the DependsOnTargets attribute.
   -->
	<Target Name="NpmRunBuild" DependsOnTargets="NpmInstall" BeforeTargets="BeforeBuild">
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
	</Target>
</Project>